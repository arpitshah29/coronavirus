<html>
<head>
<title>COVID-19 Statistics</title>
<meta name="description" content="COVID-19 Novel Coronavirus stats and json API, updated hourly">
<link rel="icon" type="image/png" href="favicon.ico">
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.css">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-5382112-9"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'UA-5382112-9');
</script>

<style>
    html {
        background:#fff;
        color:#333;
        font:1.1em/1.8em "Open Sans", sans-serif;
    }
    h1 {
        font-weight:100;
        text-align:center;
        padding:0.5rem;
        margin:0;
        font-size:2.5em;
    }
    .filters {
        padding:0.5rem 1rem;
        margin:0 auto;
        text-align:center;
    }
    select {
        position:relative;
        margin: 0;
        padding: 0.25rem 1rem;
        font-size: 0.8em;
        border: none;
        border-radius:0.1rem;
        background-color:#eee;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        z-index:9999;
    }
    .chart {
        margin-top:0.5rem;
    }
    .chart_container {
        position: relative;
        height:26vh;
    }
    footer {
        display:block;
        clear:both;
        text-align:center;
        font-size:0.6em;
    }
    .updated_at {
        text-align:center;
        font-size:0.9em;
    }
    .buttons {
        clear:both;
        margin:1rem 0;
        text-align:center;
    }
    .button {
        font-size:0.8rem;
        background-color:#ccc;
        color:#fff;
        border-radius:0.2rem;
        text-decoration:none;
        padding:0.25rem 0.5rem;
    }
    @media(max-width:1000px) {
        h1 {
            font:3em/1.2em "Open Sans", sans-serif;
            margin:1rem 0;
        }

        select {
            font-size:2em;
            width:30%;
        }

        .chart_container {
            position: relative;
            height:36vh;
         }

         .chart {
           margin-top:2.5rem;
         }
    }
</style>

</head>

<body>

    <header>
    <h1><span id="chart_title">{{.series.Title}}</span> Coronavirus Cases</h1>
    </header>
    
    <article>
    <form class="filters" method="get" action="/">
        <select class="filter-select" name="country">
            {{ range .countryOptions}}
                <option value="{{.Value}}" {{ if eq .Value $.country}}selected{{end}}>{{.Name}}</option>
            {{ end }}
        </select>

        {{ if gt (len .provinceOptions) 1 }}
            <select class="filter-select" name="province">
            {{ range .provinceOptions}}
                <option value="{{.Value}}" {{ if eq .Value $.province}}selected{{end}}>{{.Name}}</option>
            {{ end }}
            </select>
        {{ else }}
            <input type="hidden" name="province">
        {{ end }}

        <select class="filter-select" name="period">
            {{ range .periodOptions}}
                <option value="{{.Value}}" {{ if eq .Value $.period}}selected{{end}}>{{.Name}}</option>
            {{ end }}
        </select>
    </form>


    <div class="chart_container">
        <canvas class="chart" id="chartDailyDeaths" ></canvas>
    </div>
    <div class="chart_container">
        <canvas class="chart" id="chartDeaths" ></canvas>
    </div>

    <div class="chart_container">
        <canvas class="chart" id="chartDailyConfirmed" ></canvas>
    </div>
    <div class="chart_container">
        <canvas class="chart" id="chartConfirmed" ></canvas>
    </div>

    <div class="chart_container">
        <canvas class="chart" id="chartRecovered" ></canvas>
    </div>

    {{ if not .series.UpdatedAt.IsZero }}
        <p class="updated_at">{{ .series.UpdatedAtDisplay}}</p>
    {{ end }}

    <div class="buttons">
    <a href="{{.jsonURL}}" class="button">JSON Feed</a> <a href="https://github.com/kennygrant/coronavirus" class="button">About</a>
    </div>
    </article>



    <footer>
        <p>Data from <a href="https://github.com/CSSEGISandData/COVID-19">Johns Hopkins University</a>, updated hourly. Code on <a href="https://github.com/kennygrant/coronavirus">Github</a>. Hosted on Digital Ocean.</p>
    </footer>


<script>

/* Determine font size based on device */
var fontSize  = 5;
var maxTicks = 12;

if (document.body.clientWidth > 1000) {
    fontSize = 2;
    maxTicks = 30;
    console.log("small font")
}

if (document.body.clientWidth > 1500) {
    fontSize = 2;
    maxTicks = 70;
}

var chartOptions = {
    title: {
            display: true,
            fontSize:fontSize*10,
            fontStyle: 'normal',
            text: "{{.series.RecoveredDisplay}} Recovered"
     },
    scales: {
         xAxes: [{
            ticks: {
                padding:10,
                fontSize:fontSize*5,
                autoSkip: true,
                maxTicksLimit: maxTicks
            },
            gridLines: {
                 zeroLineWidth:0,
                color:"rgba(255, 255, 255,0)",
                lineWidth: 0
            }
         }],
         yAxes: [{
          
           position: "right",
           ticks: {
                fontSize:fontSize*5,
                autoSkip: true,
                maxTicksLimit: 5,
                callback: function(value, index, values) {
                    if (value >= 1000) {
                        return value / 1000 + 'k';
                    }
                    return value;
                }
            },
            gridLines: {
                color:"rgba(230, 230, 230,0.5)",
                lineWidth: 1
            }
         }]
    },
    legend:{
        display: false,
    },
    maintainAspectRatio:false
}


var chartDailyDeathsData = {
      "labels":{{.series.Dates}},
      "datasets":[{
        "label":"COVID-19 Daily Deaths",
        "data":{{.series.DeathsDaily}},
        "fill":true,
        "borderWidth":"0",
        "backgroundColor":"rgb(70, 30, 30,0.7)",
        "lineTension":0.1
        }]
}

var chartDailyDeathsCtx = document.getElementById('chartDailyDeaths').getContext('2d');
chartOptions.title.text = "{{.series.DeathsToday}} Deaths Today";
var chartRecovered = new Chart(chartDailyDeathsCtx, {
    type: 'bar',
    options: chartOptions,
    data: chartDailyDeathsData
});


var chartDailyConfirmedData = {
      "labels":{{.series.Dates}},
      "datasets":[{
        "label":"COVID-19 Daily Confirmed",
        "data":{{.series.ConfirmedDaily}},
        "fill":true,
        "borderWidth":"0",
        "backgroundColor":"rgb(163,32,32,0.7)",
        "lineTension":0.1
        }]
}

var chartDailyConfirmedCtx = document.getElementById('chartDailyConfirmed').getContext('2d');
chartOptions.title.text = "{{.series.ConfirmedToday}} Confirmed Cases Today";
var chartRecovered = new Chart(chartDailyConfirmedCtx, {
    type: 'bar',
    options: chartOptions,
    data: chartDailyConfirmedData
});



var chartDeathsData = {
    "labels":{{.series.Dates}},
    "datasets":[{
        "label":"COVID-19 Total Deaths",
        "data":{{.series.Deaths}},
        "fill":true,
        "borderWidth":"0",
        "backgroundColor":"rgb(70, 30, 30,0.7)",
        "lineTension":0.1
        }]
}

var chartDeathsCtx = document.getElementById('chartDeaths').getContext('2d');
chartOptions.title.text =  "{{.series.DeathsDisplay}} Total Deaths";
var chartDeaths = new Chart(chartDeathsCtx, {
    type: 'line',
    options: chartOptions,
    data: chartDeathsData
});



var chartConfirmedData = {
      "labels":{{.series.Dates}},
      "datasets":[{
        "label":"COVID-19 Total Confirmed",
        "data":{{.series.Confirmed}},
        "fill":true,
         "borderWidth":"0",
        "backgroundColor":"rgb(163,32,32,0.7)",
        "lineTension":0.1
        }]
}

var chartConfirmedCtx = document.getElementById('chartConfirmed').getContext('2d');
chartOptions.title.text = "{{.series.ConfirmedDisplay}} Total Confirmed";
var chartConfirmed = new Chart(chartConfirmedCtx, {
    type: 'line',
    options: chartOptions,
    data: chartConfirmedData
});

var chartRecoveredData = {
      "labels":{{.series.Dates}},
      "datasets":[{
        "label":"COVID-19 Total Recovered",
        "data":{{.series.Recovered}},
        "fill":true,
        "borderWidth":"0",
        "backgroundColor":"rgb(54,128,45,0.5)",
        "lineTension":0.1
        }]
}

var chartRecoveredCtx = document.getElementById('chartRecovered').getContext('2d');
chartOptions.title.text = "{{.series.RecoveredDisplay}} Total Recovered";
var chartRecovered = new Chart(chartRecoveredCtx, {
    type: 'line',
    options: chartOptions,
    data: chartRecoveredData
});





var filters = document.getElementsByClassName("filter-select")
for (i = 0; i < filters.length; i++) {
    filters[i].addEventListener('change',function(){
      
        // Should we instead perhaps build url and set action of form first?
        // this would be nicer than having everything as a query param
        var form = this.form;

        // Disable attributes so they are not sent 
        form["country"].setAttribute("disabled","disabled");
        form["province"].setAttribute("disabled","disabled");

        // Build a url and set the action to this url 
        url ="/"
        var country = form["country"].value
        if (country != "") {
            url = url + country
        }
        // Get the province value, unless the user changed country
        var province = form["province"].value
        if (province != "" && this.name != "country") {
            url = url + "/" + province
        }
        console.log("URL",url)
      
        form.action = url 

        // Submit the form 
        form.submit();

    })
}


</script>
</body>
</html>